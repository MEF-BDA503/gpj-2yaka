geom_histogram(binwidth = 0.05,color = 'black', fill = '#009E73') +
ggtitle("Last Evaluation") +
labs(x="Performance Score", y="Employee Count", size = 8)
p3 <- ggplot(subset(d ), aes(x=number_project, colour=number_project)) +
theme(plot.title = element_text(size=12)) +
geom_histogram(binwidth = 1,color = 'black', fill = '#56B4E9') +
ggtitle("Yearly Projects") +
labs(x="Number of Projects", y="Employee Count", size = 8)
p4 <- ggplot(subset(d ), aes(x=average_montly_hours, colour=average_montly_hours)) +
theme(plot.title = element_text(size=12)) +
geom_histogram(binwidth = 10,color = 'black', fill = '#E69F00') +
ggtitle("Average Monthly Hours")+
labs(x="Monthly Hours", y="Employee Count", size = 8)
p5 <- ggplot(subset(d ), aes(x=time_spend_company, colour=time_spend_company)) +
theme(plot.title = element_text(size=12)) +
geom_histogram(binwidth = 0.5,color = 'black', fill = '#F0E442') +
ggtitle("Time Spent in Company") +
labs(x="Time (Years)", y="Employee Count", size = 8)
p6 <- ggplot(subset(d ), aes(x=Work_accident, colour=Work_accident)) +
theme(plot.title = element_text(size=12)) +
geom_bar(color = 'black', fill = '#0072B2') +
ggtitle("Work Accidents") +
labs(x="Accident Count", y="Employee Count", size = 8) +
scale_x_continuous(breaks = c(0,1,1))
p7 <- ggplot(subset(d ), aes(x=left, colour=left)) +
theme(plot.title = element_text(size=12)) +
geom_bar(color = 'black', fill = '#D55E00') +
ggtitle("Employees Left") +
labs(x="Left Count", y="Employee Count", size = 8) +
scale_x_continuous(breaks = c(0,1,1))
p8 <- ggplot(subset(d), aes(x=promotion_last_5years, colour=promotion_last_5years)) +
theme(plot.title = element_text(size=12)) +
scale_x_continuous(breaks = c(0,1,1)) +
geom_bar(color = 'black', fill = '#CC79A7') +
ggtitle("Promotion in 5 Years") +
labs(x="Promotion Count", y="Employee Count", size = 8)
multiplot(p1,p2,p3,p4,p5,p6,p7,p8,cols=3)
dep_satis <- d %>%
group_by(departments) %>%
summarise (Satisfaction =mean(satisfaction_level))
ggplot(data=dep_satis, aes(x=departments, y=Satisfaction)) +
theme(axis.text.x = element_text(angle = 60, hjust=1))+
geom_bar(stat="identity", position=position_dodge(), fill="#FF9999", colour="black")
depLeftSatis <- d %>% group_by(departments) %>% summarise(Total =n(),LeftCount = sum(left), Satisfaction = mean(satisfaction_level) ) %>% mutate(LeftRate = LeftCount/Total)
ggplot(data = depLeftSatis, aes( x = reorder(departments, -LeftRate), y = LeftRate, fill = Satisfaction)) +
theme(axis.text.x = element_text(angle = 60, hjust=1))+
geom_col()+labs(x= "Departments", y="Left Rate")
depLeftSatis <- d %>% group_by(departments,salary) %>% summarise(Total =n(),LeftCount = sum(left), Satisfaction = mean(satisfaction_level) ) %>% mutate(LeftRate = LeftCount/Total)
ggplot(data = depLeftSatis, aes( x = reorder(departments, -LeftRate), y = LeftRate, fill=salary)) +
theme(axis.text.x = element_text(angle = 60, hjust=1)) +
geom_bar(stat="identity",position = "stack")+labs(x= "Departments", y="Left Rate")
p9 <- ggplot(d, aes(x=d$departments,fill=as.character(d$left) ))+
theme(axis.text.x = element_text(angle = 60, hjust=1))+
geom_bar() +
labs(x="Departments", y="Employee Count", fill="Left or Not")
p10 <- ggplot(d, aes(x=d$salary,fill=as.character(d$left) ))+
geom_bar() +
labs(x="Salary", y ="Employee Count",fill="Left or Not")
multiplot(p9,p10,cols=2)
CorrMat <- round(cor(d[,0:8]),3)
ggcorrplot(CorrMat, hc.order = TRUE,
#type = "lower",
lab = TRUE,
lab_size = 3,
method="circle",
colors = c("tomato2", "white", "springgreen3"),
title="Correlogram of Numeric Values",
ggtheme=theme_bw)
dLeft <- d %>% filter(left==1) %>% select(-left)
summary(dLeft)
#Define three main groups which left the company
d$left <- factor(d$left, labels=c("No", "Yes"))
gg <- ggplot(d,aes(satisfaction_level,average_montly_hours))
gg <- gg +geom_point(aes(col=factor(d$left)))
gg + geom_encircle(data=subset(d,
satisfaction_level>=0.05 &
satisfaction_level<0.12 &
average_montly_hours>240 &
average_montly_hours<=310), colour="blue",expand=0.05,spread=0.02,size=2) +
geom_encircle(data=subset(d,
satisfaction_level>=0.35 &
satisfaction_level<0.47 &
average_montly_hours>122 &
average_montly_hours<164), colour="blue", expand=0,spread=0.02,size=2) +
geom_encircle(data=subset(d,
satisfaction_level>=0.47 &
satisfaction_level<=1 &
average_montly_hours>129 &
average_montly_hours<279), colour="green", expand=0, spread=0.02,size=2) +
geom_encircle(data=subset(d,
satisfaction_level>=0.715 &
satisfaction_level<=0.9 &
average_montly_hours>215 &
average_montly_hours<278), colour="blue", expand=0, spread=0.02,size=2) +
scale_x_continuous(breaks=seq(0.08, 1, 0.08), limits = c(0.08, 1)) +
scale_y_continuous(breaks=seq(100, 315, 30), limits = c(100, 315)) +
labs(x="Satisfaction Level",y="Avg. Monthly Hours", title="Satisfaction Level vs. Average Monthly Hours",col="Left Work")
gg <- ggplot(d,aes(satisfaction_level,time_spend_company))
gg <- gg +geom_point(aes(col=factor(d$left)))
gg + geom_encircle(data=subset(d,
satisfaction_level>=0.72 &
satisfaction_level<=0.92 &
time_spend_company>4 &
time_spend_company<6.02), colour="blue", expand=0.02,spread=0.02,size=2)+
geom_encircle(data=subset(d,
satisfaction_level>=0.36 &
satisfaction_level<=0.47 &
time_spend_company==3 ), colour="blue", expand=0.02,spread=0.02,size=2)+
geom_encircle(data=subset(d,
satisfaction_level>=0.08 &
satisfaction_level<=0.12 &
time_spend_company>=3 &
time_spend_company<=5), colour="blue", expand=0.02,spread=0.02,size=2)+
scale_x_continuous(breaks=seq(0.08, 1, 0.08), limits = c(0.08, 1)) +
scale_y_continuous(breaks =  seq(0,10,by=2), limits = c(0,10))+
labs(x="Satisfaction Level",y="Time Spend In Company (Years)", title="Satisfaction Level vs. Time Spend In Company (Years)",col="Left Work")
CorrMat <- round(cor(dLeft[,0:7]),3)
ggcorrplot(CorrMat, hc.order = TRUE,
#type = "lower",
lab = TRUE,
lab_size = 3,
method="circle",
colors = c("tomato2", "white", "springgreen3"),
title="Correlogram of Numeric Values",
ggtheme=theme_bw)
names(dLeft)
dLeft_pca <- dLeft  %>% mutate(salary_Num = ifelse(salary == "low", 0, ifelse(salary == "medium", 1, 2))) %>% select(-salary,-departments)
survey_pca <-princomp(as.matrix(dLeft_pca[,1:8],cor=T))
summary(survey_pca,loadings=TRUE)
ggplot(data.frame(pc=1:5,cum_var=c(0.9996162, 0.9998254162, 0.9999774670, 0.9999894955,9.999969e-01)),aes(x=pc,y=cum_var)) +
geom_point() +
geom_line() +
labs(x="Principal Component Number",
y="Cumulative Proportion",
title="Principal Component vs. Cumulative Proportion")
#Filter to get the data from left people only
dleft<- subset(d, left=='Yes')
dleft<- select(dleft,-left)
#apply k-means with 4 clusters and 20 iterations
set.seed(20)
dleft_Cluster <- kmeans(dleft[, 1:7], 4, nstart = 20)
dleft_Cluster
multiplot <- function(..., plotlist = NULL, file, cols = 1, layout = NULL) {
require(grid)
plots <- c(list(...), plotlist)
numPlots = length(plots)
if (is.null(layout)) {
layout <- matrix(seq(1, cols * ceiling(numPlots/cols)),
ncol = cols, nrow = ceiling(numPlots/cols))
}
if (numPlots == 1) {
print(plots[[1]])
} else {
grid.newpage()
pushViewport(viewport(layout = grid.layout(nrow(layout), ncol(layout))))
for (i in 1:numPlots) {
matchidx <- as.data.frame(which(layout == i, arr.ind = TRUE))
print(plots[[i]], vp = viewport(layout.pos.row = matchidx$row,
layout.pos.col = matchidx$col))
}
}
}
library('tidyverse')
library("ggplot2")
library("ggcorrplot")
# install 'ggalt' pkg
devtools::install_github("hrbrmstr/ggalt")
# options(scipen = 999)
library('ggalt')
knitr::opts_chunk$set(echo = TRUE)
d=read.csv("HR_comma_sep.csv")
d<- d %>% rename("departments" = "sales") %>% tbl_df()
glimpse(d)
which(is.na.data.frame(d))
summary(d)
p1 <- ggplot(subset(d ), aes(x=satisfaction_level, colour=satisfaction_level)) +
theme(plot.title = element_text(size=12)) +
geom_histogram(binwidth = 0.05,color = 'black', fill = '#999999') +
ggtitle("Satisfaction Level") +
labs(x="Job Satis. Score", y="Employee Count", size = 8)
p2 <- ggplot(subset(d ), aes(x=last_evaluation, colour=last_evaluation)) +
theme(plot.title = element_text(size=12)) +
geom_histogram(binwidth = 0.05,color = 'black', fill = '#009E73') +
ggtitle("Last Evaluation") +
labs(x="Performance Score", y="Employee Count", size = 8)
p3 <- ggplot(subset(d ), aes(x=number_project, colour=number_project)) +
theme(plot.title = element_text(size=12)) +
geom_histogram(binwidth = 1,color = 'black', fill = '#56B4E9') +
ggtitle("Yearly Projects") +
labs(x="Number of Projects", y="Employee Count", size = 8)
p4 <- ggplot(subset(d ), aes(x=average_montly_hours, colour=average_montly_hours)) +
theme(plot.title = element_text(size=12)) +
geom_histogram(binwidth = 10,color = 'black', fill = '#E69F00') +
ggtitle("Average Monthly Hours")+
labs(x="Monthly Hours", y="Employee Count", size = 8)
p5 <- ggplot(subset(d ), aes(x=time_spend_company, colour=time_spend_company)) +
theme(plot.title = element_text(size=12)) +
geom_histogram(binwidth = 0.5,color = 'black', fill = '#F0E442') +
ggtitle("Time Spent in Company") +
labs(x="Time (Years)", y="Employee Count", size = 8)
p6 <- ggplot(subset(d ), aes(x=Work_accident, colour=Work_accident)) +
theme(plot.title = element_text(size=12)) +
geom_bar(color = 'black', fill = '#0072B2') +
ggtitle("Work Accidents") +
labs(x="Accident Count", y="Employee Count", size = 8) +
scale_x_continuous(breaks = c(0,1,1))
p7 <- ggplot(subset(d ), aes(x=left, colour=left)) +
theme(plot.title = element_text(size=12)) +
geom_bar(color = 'black', fill = '#D55E00') +
ggtitle("Employees Left") +
labs(x="Left Count", y="Employee Count", size = 8) +
scale_x_continuous(breaks = c(0,1,1))
p8 <- ggplot(subset(d), aes(x=promotion_last_5years, colour=promotion_last_5years)) +
theme(plot.title = element_text(size=12)) +
scale_x_continuous(breaks = c(0,1,1)) +
geom_bar(color = 'black', fill = '#CC79A7') +
ggtitle("Promotion in 5 Years") +
labs(x="Promotion Count", y="Employee Count", size = 8)
multiplot(p1,p2,p3,p4,p5,p6,p7,p8,cols=3)
dep_satis <- d %>%
group_by(departments) %>%
summarise (Satisfaction =mean(satisfaction_level))
ggplot(data=dep_satis, aes(x=departments, y=Satisfaction)) +
theme(axis.text.x = element_text(angle = 60, hjust=1))+
geom_bar(stat="identity", position=position_dodge(), fill="#FF9999", colour="black")
depLeftSatis <- d %>% group_by(departments) %>% summarise(Total =n(),LeftCount = sum(left), Satisfaction = mean(satisfaction_level) ) %>% mutate(LeftRate = LeftCount/Total)
ggplot(data = depLeftSatis, aes( x = reorder(departments, -LeftRate), y = LeftRate, fill = Satisfaction)) +
theme(axis.text.x = element_text(angle = 60, hjust=1))+
geom_col()+labs(x= "Departments", y="Left Rate")
depLeftSatis <- d %>% group_by(departments,salary) %>% summarise(Total =n(),LeftCount = sum(left), Satisfaction = mean(satisfaction_level) ) %>% mutate(LeftRate = LeftCount/Total)
ggplot(data = depLeftSatis, aes( x = reorder(departments, -LeftRate), y = LeftRate, fill=salary)) +
theme(axis.text.x = element_text(angle = 60, hjust=1)) +
geom_bar(stat="identity",position = "stack")+labs(x= "Departments", y="Left Rate")
p9 <- ggplot(d, aes(x=d$departments,fill=as.character(d$left) ))+
theme(axis.text.x = element_text(angle = 60, hjust=1))+
geom_bar() +
labs(x="Departments", y="Employee Count", fill="Left or Not")
p10 <- ggplot(d, aes(x=d$salary,fill=as.character(d$left) ))+
geom_bar() +
labs(x="Salary", y ="Employee Count",fill="Left or Not")
multiplot(p9,p10,cols=2)
CorrMat <- round(cor(d[,0:8]),3)
ggcorrplot(CorrMat, hc.order = TRUE,
#type = "lower",
lab = TRUE,
lab_size = 3,
method="circle",
colors = c("tomato2", "white", "springgreen3"),
title="Correlogram of Numeric Values",
ggtheme=theme_bw)
dLeft <- d %>% filter(left==1) %>% select(-left)
summary(dLeft)
#Define three main groups which left the company
d$left <- factor(d$left, labels=c("No", "Yes"))
gg <- ggplot(d,aes(satisfaction_level,average_montly_hours))
gg <- gg +geom_point(aes(col=factor(d$left)))
gg + geom_encircle(data=subset(d,
satisfaction_level>=0.05 &
satisfaction_level<0.12 &
average_montly_hours>240 &
average_montly_hours<=310), colour="blue",expand=0.05,spread=0.02,size=2) +
geom_encircle(data=subset(d,
satisfaction_level>=0.35 &
satisfaction_level<0.47 &
average_montly_hours>122 &
average_montly_hours<164), colour="blue", expand=0,spread=0.02,size=2) +
geom_encircle(data=subset(d,
satisfaction_level>=0.47 &
satisfaction_level<=1 &
average_montly_hours>129 &
average_montly_hours<279), colour="green", expand=0, spread=0.02,size=2) +
geom_encircle(data=subset(d,
satisfaction_level>=0.715 &
satisfaction_level<=0.9 &
average_montly_hours>215 &
average_montly_hours<278), colour="blue", expand=0, spread=0.02,size=2) +
scale_x_continuous(breaks=seq(0.08, 1, 0.08), limits = c(0.08, 1)) +
scale_y_continuous(breaks=seq(100, 315, 30), limits = c(100, 315)) +
labs(x="Satisfaction Level",y="Avg. Monthly Hours", title="Satisfaction Level vs. Average Monthly Hours",col="Left Work")
gg <- ggplot(d,aes(satisfaction_level,time_spend_company))
gg <- gg +geom_point(aes(col=factor(d$left)))
gg + geom_encircle(data=subset(d,
satisfaction_level>=0.72 &
satisfaction_level<=0.92 &
time_spend_company>4 &
time_spend_company<6.02), colour="blue", expand=0.02,spread=0.02,size=2)+
geom_encircle(data=subset(d,
satisfaction_level>=0.36 &
satisfaction_level<=0.47 &
time_spend_company==3 ), colour="blue", expand=0.02,spread=0.02,size=2)+
geom_encircle(data=subset(d,
satisfaction_level>=0.08 &
satisfaction_level<=0.12 &
time_spend_company>=3 &
time_spend_company<=5), colour="blue", expand=0.02,spread=0.02,size=2)+
scale_x_continuous(breaks=seq(0.08, 1, 0.08), limits = c(0.08, 1)) +
scale_y_continuous(breaks =  seq(0,10,by=2), limits = c(0,10))+
labs(x="Satisfaction Level",y="Time Spend In Company (Years)", title="Satisfaction Level vs. Time Spend In Company (Years)",col="Left Work")
CorrMat <- round(cor(dLeft[,0:7]),3)
ggcorrplot(CorrMat, hc.order = TRUE,
#type = "lower",
lab = TRUE,
lab_size = 3,
method="circle",
colors = c("tomato2", "white", "springgreen3"),
title="Correlogram of Numeric Values",
ggtheme=theme_bw)
names(dLeft)
dLeft_pca <- dLeft  %>% mutate(salary_Num = ifelse(salary == "low", 0, ifelse(salary == "medium", 1, 2))) %>% select(-salary,-departments)
survey_pca <-princomp(as.matrix(dLeft_pca[,1:8],cor=T))
summary(survey_pca,loadings=TRUE)
ggplot(data.frame(pc=1:5,cum_var=c(0.9996162, 0.9998254162, 0.9999774670, 0.9999894955,9.999969e-01)),aes(x=pc,y=cum_var)) +
geom_point() +
geom_line() +
labs(x="Principal Component Number",
y="Cumulative Proportion",
title="Principal Component vs. Cumulative Proportion")
#Filter to get the data from left people only
dleft<- subset(d, left=='Yes')
dleft<- select(dleft,-left)
#apply k-means with 4 clusters and 20 iterations
set.seed(20)
dleft_Cluster <- kmeans(dleft[, 1:7], 4, nstart = 20)
dleft_Cluster
multiplot <- function(..., plotlist = NULL, file, cols = 1, layout = NULL) {
require(grid)
plots <- c(list(...), plotlist)
numPlots = length(plots)
if (is.null(layout)) {
layout <- matrix(seq(1, cols * ceiling(numPlots/cols)),
ncol = cols, nrow = ceiling(numPlots/cols))
}
if (numPlots == 1) {
print(plots[[1]])
} else {
grid.newpage()
pushViewport(viewport(layout = grid.layout(nrow(layout), ncol(layout))))
for (i in 1:numPlots) {
matchidx <- as.data.frame(which(layout == i, arr.ind = TRUE))
print(plots[[i]], vp = viewport(layout.pos.row = matchidx$row,
layout.pos.col = matchidx$col))
}
}
}
set.seed(503)
library(tidyverse)
library(dplyr)
library(ggplot2)
library(psych)
getwd()
data<-read.csv("C:\\Users\\merye\\Desktop\\diamonds.csv")
data %>%
tbl_df()
glimpse(data)
summary(data)
# p1 <- ggplot(subset(data), aes(x=carat, colour=carat)) +
#   theme(plot.title = element_text(size=12)) +
#   geom_histogram(binwidth = 1,color = 'black', fill = '#999999') +
#   ggtitle("Carat") +
#   labs(x="Carat", y="Diamonds Count", size = 8)
#
# p2 <- ggplot(subset(data ), aes(x=depth, colour=depth)) +
#   theme(plot.title = element_text(size=12)) +
#   geom_histogram(binwidth = 2,color = 'black', fill = '#009E73') +
#   ggtitle("Depth Values") +
#   labs(x="Depth", y="Diamonds Count", size = 8)
#
# p3 <- ggplot(subset(data ), aes(x=price, colour=price)) +
#    theme(plot.title = element_text(size=12)) +
#   geom_histogram(binwidth = 0.5,color = 'black', fill = '#56B4E9') +
#   ggtitle("Price") +
#   labs(x="Price of Diamonds", y="Diamonds Count", size = 8)
#
# p4 <- ggplot(subset(data), aes(x=x, colour=x)) +
#   theme(plot.title = element_text(size=12)) +
#   geom_histogram(binwidth = 1,color = 'black', fill = '#E69F00') +
#   ggtitle("X")+
#   labs(x="X", y="Diamonds Count", size = 8)
#
#
# p5 <- ggplot(subset(data ), aes(x=y, colour=y)) +
#   theme(plot.title = element_text(size=12)) +
#   geom_histogram(binwidth = 3,color = 'black', fill = '#F0E442') +
#   ggtitle("Y") +
#   labs(x="Y", y="Diamonds Count", size = 8)
#
# p6 <- ggplot(subset(data ), aes(x=z, colour=z)) +
#   theme(plot.title = element_text(size=12)) +
#   geom_histogram(binwidth=1, color = 'black', fill = '#0072B2') +
#   ggtitle("Z") +
#   labs(x="Z", y="Diamonds Count", size = 8)
#
# p7 <- ggplot(subset(data ), aes(x=table, colour=table)) +
#   theme(plot.title = element_text(size=12)) +
#   geom_histogram(binwidth= 3, color = 'black', fill = '#0072B2') +
#   ggtitle("Table") +
#   labs(x="Table", y="Diamonds Count", size = 8)
#
# multiplot(p1,p2,p3,p4,p5,p6,p7,cols=3)
qplot(carat, price, data=data, color=color, shape=cut)
qplot(log(carat), log(price),
data=data, color=clarity)
qplot(price, carat, data=data,
facets = . ~ color)
qplot(price, carat, data=data,
facets = color ~ clarity)
qplot(cut, data=data, geom="bar")
# p<-ggplot(data=data, aes(x=cut, y=price)) +
#   geom_bar(stat="identity", fill="steelblue")
#
# p
qplot(price, data=data, binwidth = 1000,
geom="histogram")
b1 <- ggplot(data, aes(x=color,fill=as.character(data$cut) ))+
theme(axis.text.x = element_text(angle = 60, hjust=1))+
geom_bar() +
labs(x="Diamonds Colors", y="Diamonds Price", fill="Cut")
b1
multiplot <- function(..., plotlist = NULL, file, cols = 1, layout = NULL) {
require(grid)
plots <- c(list(...), plotlist)
numPlots = length(plots)
if (is.null(layout)) {
layout <- matrix(seq(1, cols * ceiling(numPlots/cols)),
ncol = cols, nrow = ceiling(numPlots/cols))
}
if (numPlots == 1) {
print(plots[[1]])
} else {
grid.newpage()
pushViewport(viewport(layout = grid.layout(nrow(layout), ncol(layout))))
for (i in 1:numPlots) {
matchidx <- as.data.frame(which(layout == i, arr.ind = TRUE))
print(plots[[i]], vp = viewport(layout.pos.row = matchidx$row,
layout.pos.col = matchidx$col))
}
}
}
set.seed(503)
library(tidyverse)
library(dplyr)
library(ggplot2)
library(psych)
getwd()
data<-read.csv("C:\\Users\\merye\\Desktop\\diamonds.csv")
data %>%
tbl_df()
glimpse(data)
summary(data)
# p1 <- ggplot(subset(data), aes(x=carat, colour=carat)) +
#   theme(plot.title = element_text(size=12)) +
#   geom_histogram(binwidth = 1,color = 'black', fill = '#999999') +
#   ggtitle("Carat") +
#   labs(x="Carat", y="Diamonds Count", size = 8)
#
# p2 <- ggplot(subset(data ), aes(x=depth, colour=depth)) +
#   theme(plot.title = element_text(size=12)) +
#   geom_histogram(binwidth = 2,color = 'black', fill = '#009E73') +
#   ggtitle("Depth Values") +
#   labs(x="Depth", y="Diamonds Count", size = 8)
#
# p3 <- ggplot(subset(data ), aes(x=price, colour=price)) +
#    theme(plot.title = element_text(size=12)) +
#   geom_histogram(binwidth = 0.5,color = 'black', fill = '#56B4E9') +
#   ggtitle("Price") +
#   labs(x="Price of Diamonds", y="Diamonds Count", size = 8)
#
# p4 <- ggplot(subset(data), aes(x=x, colour=x)) +
#   theme(plot.title = element_text(size=12)) +
#   geom_histogram(binwidth = 1,color = 'black', fill = '#E69F00') +
#   ggtitle("X")+
#   labs(x="X", y="Diamonds Count", size = 8)
#
#
# p5 <- ggplot(subset(data ), aes(x=y, colour=y)) +
#   theme(plot.title = element_text(size=12)) +
#   geom_histogram(binwidth = 3,color = 'black', fill = '#F0E442') +
#   ggtitle("Y") +
#   labs(x="Y", y="Diamonds Count", size = 8)
#
# p6 <- ggplot(subset(data ), aes(x=z, colour=z)) +
#   theme(plot.title = element_text(size=12)) +
#   geom_histogram(binwidth=1, color = 'black', fill = '#0072B2') +
#   ggtitle("Z") +
#   labs(x="Z", y="Diamonds Count", size = 8)
#
# p7 <- ggplot(subset(data ), aes(x=table, colour=table)) +
#   theme(plot.title = element_text(size=12)) +
#   geom_histogram(binwidth= 3, color = 'black', fill = '#0072B2') +
#   ggtitle("Table") +
#   labs(x="Table", y="Diamonds Count", size = 8)
#
# multiplot(p1,p2,p3,p4,p5,p6,p7,cols=3)
qplot(carat, price, data=data, color=color, shape=cut)
qplot(log(carat), log(price),
data=data, color=clarity)
qplot(price, carat, data=data,
facets = . ~ color)
qplot(price, carat, data=data,
facets = color ~ clarity)
qplot(cut, data=data, geom="bar")
# p<-ggplot(data=data, aes(x=cut, y=price)) +
#   geom_bar(stat="identity", fill="steelblue")
#
# p
qplot(price, data=data, binwidth = 1000,
geom="histogram")
b1 <- ggplot(data, aes(x=color,fill=as.character(data$cut) ))+
theme(axis.text.x = element_text(angle = 60, hjust=1))+
geom_bar() +
labs(x="Diamonds Colors", y="Diamonds Price", fill="Cut")
b1
